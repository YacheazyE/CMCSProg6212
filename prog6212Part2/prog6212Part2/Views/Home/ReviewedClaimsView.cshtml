@* References
1.	Http Post method in Asp.net Core Web API | Asp.net core Web API 8.0 - Just Pick and Learn. 2024. YouTube video, added by Just Pick and Learn. [Online]. Available at: https://www.youtube.com/watch?v=wPN1oR7c7JE  [Accessed 16 October 2024]
2.	MicrosoftLearn. 2024. Part 6, controller methods and views in ASP.NET Core, 26/07/2024. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/controller-methods-views?view=aspnetcore-8.0 [Accessed 16 October 2024].
3.	How to Convert API JSON to C# Classes using ASP .NET Core in MVC- CodeS. 2024. YouTube video, added by CodeS. [Online]. Available at: https://www.youtube.com/watch?v=ZsTLTmnuvCA&t=606s  [Accessed 16 October 2024]
4.	How to use IWebHostEnvironment in Class Library Project | ASP.NET CORE-ASP.NET MVC. 2024. YouTube video, added by ASP.NET MVC. [Online]. Available at: https://www.youtube.com/watch?v=sVyNC6oB6ig  [Accessed 16 October 2024]
5.	How to access IWebHostEnvironment in ASP.NET 6.0, 7.0 OR Higer Version-ASP.NET MVC. 2024. YouTube video, added by ASP.NET MVC. [Online]. Available at: https://www.youtube.com/watch?v=sVyNC6oB6ig  [Accessed 16 October 2024]
6.	MicrosoftLearn. 2024. Part 4, add a model to an ASP.NET Core MVC app, 26/07/2024. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/adding-model?view=aspnetcore-8.0&tabs=visual-studio  [Accessed 16 October 2024].
7.	ViewModels in ASP.NET MVC applications - This is how it works-tutorialsEU - C#. 2024. YouTube video, added by tutorialsEU - C# . [Online]. Available at: https://www.youtube.com/watch?v=NfUccG5faBQ  [Accessed 16 October 2024]
8.	MicrosoftLearn. 2024. HtmlForm.Enctype Property, 2024. [Online]. Available at: https://learn.microsoft.com/en-us/dotnet/api/system.web.ui.htmlcontrols.htmlform.enctype?view=netframework-4.8.1  [Accessed 17 October 2024].
9.	MicrosoftLearn. 2024. Upload files in ASP.NET Core, 10/01/2024. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads?view=aspnetcore-8.0   [Accessed 17 October 2024].
10.	TutorialsTeacher. 2024. Integrate Controller, View and Model, 2024. [Online]. Available at: https://www.tutorialsteacher.com/mvc/integrate-controller-view-model  [Accessed 17 October 2024]
11.	C#Corner. 2024. GET and POST Calls to Controller's Method in MVC, 2 April 2024. [Online]. Available at: https://www.c-sharpcorner.com/UploadFile/abhikumarvatsa/jquery-ajax-get-and-post-calls-to-controllers-method-in-mvc/ [Accessed 17 October 2024]
12.	26 - Consume GET Request In ASP.Net MVC | ASP.Net Web API- Just Pick and Learn. 2024. YouTube video, added by Code Semantic. [Online]. Available at: https://www.youtube.com/watch?v=34bJ547hBHQ  [Accessed 16 October 2024]
13.	C#Corner. 2024. HTML5 anchor Tag, 28 October 2019. [Online]. Available at: https://www.c-sharpcorner.com/UploadFile/667ddf/html5-anchor-tag/  [Accessed 18 October 2024]
14.	MicrosoftLearn. 2024. Creating an Action (C#), 11 July 2022. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/controllers-and-routing/creating-an-action-cs   [Accessed 18 October 2024]
 *@

@model List<prog6212Part2.Models.LecturerClaims> // The model is a list of LecturerClaims

<table>

    <thead>
        <tr>
            <!-- Table headers to define the columns for the claims data -->
            <th>Claim ID</th> <!-- Unique ID for each claim -->
            <th>Lecturer Name</th> <!-- Name of the lecturer who submitted the claim -->
            <th>Hourly rate</th> <!-- Hourly rate of the lecturer -->
            <th>Hours Worked</th> <!-- Number of hours worked by the lecturer -->
            <th>Additional Notes</th> <!-- Any additional notes added to the claim -->
            <th>File Name</th> <!-- Name of the uploaded claim file -->
            <th>Claim Status</th> <!-- Status of the claim (approved/rejected/pending) -->
            <th>Claim Date</th> <!-- Date when the claim was submitted -->
        </tr>
    </thead>

    <tbody>
        @foreach (var claimView in Model) // Loop through each claim in the list of LecturerClaims
        {
            <tr>
                <!-- Display each claim's properties in their respective table cells -->
                <td>@claimView.claimID</td> <!-- Claim ID -->
                <td>@claimView.claimLecturerName</td> <!-- Lecturer's name -->
                <td>@claimView.claimHourlyRate</td> <!-- Hourly rate -->
                <td>@claimView.claimHoursWorked</td> <!-- Hours worked -->
                <td>@claimView.claimAdditionalNotes</td> <!-- Additional notes -->
                <td>@claimView.claimFileName</td> <!-- Uploaded file name -->
                <!-- Conditional display for claim status -->
                @if (claimView.claimStatus == true || claimView.claimStatus == false)
                {
                    
                    <td>@(claimView.claimStatus ? "Approve" : "Rejected")</td> <!-- If the claim is approved or rejected -->
                }
                else if (claimView.claimStatus.Equals(null))
                {
                    <td>Pending</td> <!-- If the claim is still pending -->
                }
               

                <td>@claimView.claimDate</td> <!-- Claim submission date -->
            </tr>
        }
    </tbody>

</table>
