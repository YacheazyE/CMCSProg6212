@* References
1.	Http Post method in Asp.net Core Web API | Asp.net core Web API 8.0 - Just Pick and Learn. 2024. YouTube video, added by Just Pick and Learn. [Online]. Available at: https://www.youtube.com/watch?v=wPN1oR7c7JE  [Accessed 16 October 2024]
2.	MicrosoftLearn. 2024. Part 6, controller methods and views in ASP.NET Core, 26/07/2024. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/controller-methods-views?view=aspnetcore-8.0 [Accessed 16 October 2024].
3.	How to Convert API JSON to C# Classes using ASP .NET Core in MVC- CodeS. 2024. YouTube video, added by CodeS. [Online]. Available at: https://www.youtube.com/watch?v=ZsTLTmnuvCA&t=606s  [Accessed 16 October 2024]
4.	How to use IWebHostEnvironment in Class Library Project | ASP.NET CORE-ASP.NET MVC. 2024. YouTube video, added by ASP.NET MVC. [Online]. Available at: https://www.youtube.com/watch?v=sVyNC6oB6ig  [Accessed 16 October 2024]
5.	How to access IWebHostEnvironment in ASP.NET 6.0, 7.0 OR Higer Version-ASP.NET MVC. 2024. YouTube video, added by ASP.NET MVC. [Online]. Available at: https://www.youtube.com/watch?v=sVyNC6oB6ig  [Accessed 16 October 2024]
6.	MicrosoftLearn. 2024. Part 4, add a model to an ASP.NET Core MVC app, 26/07/2024. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/adding-model?view=aspnetcore-8.0&tabs=visual-studio  [Accessed 16 October 2024].
7.	ViewModels in ASP.NET MVC applications - This is how it works-tutorialsEU - C#. 2024. YouTube video, added by tutorialsEU - C# . [Online]. Available at: https://www.youtube.com/watch?v=NfUccG5faBQ  [Accessed 16 October 2024]
8.	MicrosoftLearn. 2024. HtmlForm.Enctype Property, 2024. [Online]. Available at: https://learn.microsoft.com/en-us/dotnet/api/system.web.ui.htmlcontrols.htmlform.enctype?view=netframework-4.8.1  [Accessed 17 October 2024].
9.	MicrosoftLearn. 2024. Upload files in ASP.NET Core, 10/01/2024. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads?view=aspnetcore-8.0   [Accessed 17 October 2024].
10.	TutorialsTeacher. 2024. Integrate Controller, View and Model, 2024. [Online]. Available at: https://www.tutorialsteacher.com/mvc/integrate-controller-view-model  [Accessed 17 October 2024]
11.	C#Corner. 2024. GET and POST Calls to Controller's Method in MVC, 2 April 2024. [Online]. Available at: https://www.c-sharpcorner.com/UploadFile/abhikumarvatsa/jquery-ajax-get-and-post-calls-to-controllers-method-in-mvc/ [Accessed 17 October 2024]
12.	26 - Consume GET Request In ASP.Net MVC | ASP.Net Web API- Just Pick and Learn. 2024. YouTube video, added by Code Semantic. [Online]. Available at: https://www.youtube.com/watch?v=34bJ547hBHQ  [Accessed 16 October 2024]
13.	C#Corner. 2024. HTML5 anchor Tag, 28 October 2019. [Online]. Available at: https://www.c-sharpcorner.com/UploadFile/667ddf/html5-anchor-tag/  [Accessed 18 October 2024]
14.	MicrosoftLearn. 2024. Creating an Action (C#), 11 July 2022. [Online]. Available at: https://learn.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/controllers-and-routing/creating-an-action-cs   [Accessed 18 October 2024]
 *@

@model List<prog6212Part2.Models.LecturerClaims> // Model for the list of LecturerClaims

@using (Html.BeginForm("StoreDatabase", "Home", FormMethod.Post, new { enctype = "multipart/form-data" })) // Form to post lecturer claims data to "StoreDatabase" action in "Home" controller
{
    <h1>Lecturer Claims View</h1> <!-- Title of the page -->

    <div class="text-start">
        <!-- Input field for the lecturer to enter their name -->
        <label for="LecturerName">Enter Your Name</label>
        <input name="LecturerName" type="text" required /> <!-- Text input with a required field -->
        <br /><br />

        <!-- Input field for the hourly rate -->
        <label for="HourlyRate">Enter Your Hourly Rate</label>
        <input name="HourlyRate" type="number" required /> <!-- Number input with a required field -->
        <br /><br />

        <!-- Input field for hours worked -->
        <label for="HoursWorked">Enter Your Hours Worked</label>
        <input name="HoursWorked" type="number" required /> <!-- Number input for hours worked with a required field -->
        <br /><br />

        <!-- Input field for any additional notes -->
        <label for="AddNotes">Enter Your Additional Notes</label>
        <input name="AddNotes" type="text" required /> <!-- Text input for additional notes with a required field -->
        <br /><br />

        <!-- Input for file upload (claim document) -->
        <label for="ClaimFileName">Upload Document</label>
        <input name="ClaimFileName" type="file" required /> <!-- File input with a required field -->
        <br /><br />

        <!-- Submit button to store the data in the database -->
        <input type="submit" value="StoreDatabase" />
        <br /><br />
        <br /><br />

        <!-- Link to view all previously submitted claims -->
        <a href="@Url.Action("ReviewedClaimsView", "Home")" class="btnStyle">View All Claims</a>
    </div>
}
<br />
<br />
<br />
<br />
<div>
    <!-- Table to display all claims from the database -->
    <table>
        <thead>
            <tr>
                <th>Uploader Name</th> <!-- Column for the lecturer's name -->
                <th>Hourly Rate</th> <!-- Column for the hourly rate -->
                <th>Hours Worked</th> <!-- Column for the number of hours worked -->
                <th>Additional Notes</th> <!-- Column for any additional notes -->
                <th>Claim Name</th> <!-- Column for the uploaded document's name -->
                <th>Claim Date</th> <!-- Column for the date the claim was submitted -->
                <th>View Document</th> <!-- Column for viewing the uploaded document -->
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) // Loop through the list of claims
            {
                <tr>
                    <!-- Display each property of the claim item -->
                    <td>@item.claimLecturerName</td> <!-- Display the lecturer's name -->
                    <td>@item.claimHourlyRate</td> <!-- Display the hourly rate -->
                    <td>@item.claimHoursWorked</td> <!-- Display the hours worked -->
                    <td>@item.claimAdditionalNotes</td> <!-- Display the additional notes -->
                    <td>@item.claimFileName</td> <!-- Display the file name of the uploaded document -->
                    <td>@item.claimDate.ToString("yyyy-MM-dd")</td> <!-- Display the claim date in "yyyy-MM-dd" format -->
                    <td>
                        <!-- Link to view the uploaded document -->
                        <a asp-action="ReadFile" asp-route-newFileName="@item.claimFileName">View</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
